name: Sanity check

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sanity:
    name: Sanity check
    runs-on: ubuntu-latest
    steps:

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set Go version
        run: |
          echo "GOVERSION=$(cat .go-version)" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: "${{env.GOVERSION}}"

      - name: Set up env variables
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
          echo "$(go env -w GOCACHE=/home/runner/work/scylla-manager/scylla-manager/.cache/go-build/)"
          echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "GOCACHEPATTERN=.cache/go-build/**" >> $GITHUB_ENV
          echo "date=$(date  +'%m-%Y')" >> $GITHUB_ENV

      - name: Restore Module Cache
        uses: actions/cache@v2
        id: cache-go-modules
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Restore Go Test Cache
        uses: actions/cache@v2
        id: cache-go-test
        with:
          path: "${{ env.GOCACHE }}"
          key: ${{ runner.os }}-${{ hashFiles(env.GOCACHEPATTERN) }}-${{ env.date }}

      - name: Restore dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
         path: ~/work/scylla-manager/scylla-manager/bin
         key: ${{ runner.os }}-${{ hashFiles('**/install-dependencies.sh') }}

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          ./install-dependencies.sh

      - name: Unit Tests
        run: |
          make unit-test

      - name: Lint
        run: |
          make .check-lint
