// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPutClusterClusterIDRepairsShparallelismParams creates a new PutClusterClusterIDRepairsShparallelismParams object
// with the default values initialized.
func NewPutClusterClusterIDRepairsShparallelismParams() *PutClusterClusterIDRepairsShparallelismParams {
	var ()
	return &PutClusterClusterIDRepairsShparallelismParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutClusterClusterIDRepairsShparallelismParamsWithTimeout creates a new PutClusterClusterIDRepairsShparallelismParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutClusterClusterIDRepairsShparallelismParamsWithTimeout(timeout time.Duration) *PutClusterClusterIDRepairsShparallelismParams {
	var ()
	return &PutClusterClusterIDRepairsShparallelismParams{

		timeout: timeout,
	}
}

// NewPutClusterClusterIDRepairsShparallelismParamsWithContext creates a new PutClusterClusterIDRepairsShparallelismParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutClusterClusterIDRepairsShparallelismParamsWithContext(ctx context.Context) *PutClusterClusterIDRepairsShparallelismParams {
	var ()
	return &PutClusterClusterIDRepairsShparallelismParams{

		Context: ctx,
	}
}

// NewPutClusterClusterIDRepairsShparallelismParamsWithHTTPClient creates a new PutClusterClusterIDRepairsShparallelismParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutClusterClusterIDRepairsShparallelismParamsWithHTTPClient(client *http.Client) *PutClusterClusterIDRepairsShparallelismParams {
	var ()
	return &PutClusterClusterIDRepairsShparallelismParams{
		HTTPClient: client,
	}
}

/*
PutClusterClusterIDRepairsShparallelismParams contains all the parameters to send to the API endpoint
for the put cluster cluster ID repairs shparallelism operation typically these are written to a http.Request
*/
type PutClusterClusterIDRepairsShparallelismParams struct {

	/*ClusterID*/
	ClusterID string
	/*Shparallelism*/
	Shparallelism int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) WithTimeout(timeout time.Duration) *PutClusterClusterIDRepairsShparallelismParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) WithContext(ctx context.Context) *PutClusterClusterIDRepairsShparallelismParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) WithHTTPClient(client *http.Client) *PutClusterClusterIDRepairsShparallelismParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) WithClusterID(clusterID string) *PutClusterClusterIDRepairsShparallelismParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithShparallelism adds the shparallelism to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) WithShparallelism(shparallelism int64) *PutClusterClusterIDRepairsShparallelismParams {
	o.SetShparallelism(shparallelism)
	return o
}

// SetShparallelism adds the shparallelism to the put cluster cluster ID repairs shparallelism params
func (o *PutClusterClusterIDRepairsShparallelismParams) SetShparallelism(shparallelism int64) {
	o.Shparallelism = shparallelism
}

// WriteToRequest writes these params to a swagger request
func (o *PutClusterClusterIDRepairsShparallelismParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	// query param shparallelism
	qrShparallelism := o.Shparallelism
	qShparallelism := swag.FormatInt64(qrShparallelism)
	if qShparallelism != "" {
		if err := r.SetQueryParam("shparallelism", qShparallelism); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
