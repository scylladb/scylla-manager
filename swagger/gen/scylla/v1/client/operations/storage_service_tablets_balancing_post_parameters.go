// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewStorageServiceTabletsBalancingPostParams creates a new StorageServiceTabletsBalancingPostParams object
// with the default values initialized.
func NewStorageServiceTabletsBalancingPostParams() *StorageServiceTabletsBalancingPostParams {
	var ()
	return &StorageServiceTabletsBalancingPostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStorageServiceTabletsBalancingPostParamsWithTimeout creates a new StorageServiceTabletsBalancingPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStorageServiceTabletsBalancingPostParamsWithTimeout(timeout time.Duration) *StorageServiceTabletsBalancingPostParams {
	var ()
	return &StorageServiceTabletsBalancingPostParams{

		timeout: timeout,
	}
}

// NewStorageServiceTabletsBalancingPostParamsWithContext creates a new StorageServiceTabletsBalancingPostParams object
// with the default values initialized, and the ability to set a context for a request
func NewStorageServiceTabletsBalancingPostParamsWithContext(ctx context.Context) *StorageServiceTabletsBalancingPostParams {
	var ()
	return &StorageServiceTabletsBalancingPostParams{

		Context: ctx,
	}
}

// NewStorageServiceTabletsBalancingPostParamsWithHTTPClient creates a new StorageServiceTabletsBalancingPostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStorageServiceTabletsBalancingPostParamsWithHTTPClient(client *http.Client) *StorageServiceTabletsBalancingPostParams {
	var ()
	return &StorageServiceTabletsBalancingPostParams{
		HTTPClient: client,
	}
}

/*
StorageServiceTabletsBalancingPostParams contains all the parameters to send to the API endpoint
for the storage service tablets balancing post operation typically these are written to a http.Request
*/
type StorageServiceTabletsBalancingPostParams struct {

	/*Enabled
	  When set to false, tablet load balancing is disabled

	*/
	Enabled bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) WithTimeout(timeout time.Duration) *StorageServiceTabletsBalancingPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) WithContext(ctx context.Context) *StorageServiceTabletsBalancingPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) WithHTTPClient(client *http.Client) *StorageServiceTabletsBalancingPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnabled adds the enabled to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) WithEnabled(enabled bool) *StorageServiceTabletsBalancingPostParams {
	o.SetEnabled(enabled)
	return o
}

// SetEnabled adds the enabled to the storage service tablets balancing post params
func (o *StorageServiceTabletsBalancingPostParams) SetEnabled(enabled bool) {
	o.Enabled = enabled
}

// WriteToRequest writes these params to a swagger request
func (o *StorageServiceTabletsBalancingPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param enabled
	qrEnabled := o.Enabled
	qEnabled := swag.FormatBool(qrEnabled)
	if qEnabled != "" {
		if err := r.SetQueryParam("enabled", qEnabled); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
