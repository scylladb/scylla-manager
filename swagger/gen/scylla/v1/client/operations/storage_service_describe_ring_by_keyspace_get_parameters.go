// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewStorageServiceDescribeRingByKeyspaceGetParams creates a new StorageServiceDescribeRingByKeyspaceGetParams object
// with the default values initialized.
func NewStorageServiceDescribeRingByKeyspaceGetParams() *StorageServiceDescribeRingByKeyspaceGetParams {
	var ()
	return &StorageServiceDescribeRingByKeyspaceGetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStorageServiceDescribeRingByKeyspaceGetParamsWithTimeout creates a new StorageServiceDescribeRingByKeyspaceGetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStorageServiceDescribeRingByKeyspaceGetParamsWithTimeout(timeout time.Duration) *StorageServiceDescribeRingByKeyspaceGetParams {
	var ()
	return &StorageServiceDescribeRingByKeyspaceGetParams{

		timeout: timeout,
	}
}

// NewStorageServiceDescribeRingByKeyspaceGetParamsWithContext creates a new StorageServiceDescribeRingByKeyspaceGetParams object
// with the default values initialized, and the ability to set a context for a request
func NewStorageServiceDescribeRingByKeyspaceGetParamsWithContext(ctx context.Context) *StorageServiceDescribeRingByKeyspaceGetParams {
	var ()
	return &StorageServiceDescribeRingByKeyspaceGetParams{

		Context: ctx,
	}
}

// NewStorageServiceDescribeRingByKeyspaceGetParamsWithHTTPClient creates a new StorageServiceDescribeRingByKeyspaceGetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStorageServiceDescribeRingByKeyspaceGetParamsWithHTTPClient(client *http.Client) *StorageServiceDescribeRingByKeyspaceGetParams {
	var ()
	return &StorageServiceDescribeRingByKeyspaceGetParams{
		HTTPClient: client,
	}
}

/*
StorageServiceDescribeRingByKeyspaceGetParams contains all the parameters to send to the API endpoint
for the storage service describe ring by keyspace get operation typically these are written to a http.Request
*/
type StorageServiceDescribeRingByKeyspaceGetParams struct {

	/*Keyspace
	  The keyspace to fetch information about

	*/
	Keyspace string
	/*Table
	  The name of table to fetch information about

	*/
	Table *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) WithTimeout(timeout time.Duration) *StorageServiceDescribeRingByKeyspaceGetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) WithContext(ctx context.Context) *StorageServiceDescribeRingByKeyspaceGetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) WithHTTPClient(client *http.Client) *StorageServiceDescribeRingByKeyspaceGetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithKeyspace adds the keyspace to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) WithKeyspace(keyspace string) *StorageServiceDescribeRingByKeyspaceGetParams {
	o.SetKeyspace(keyspace)
	return o
}

// SetKeyspace adds the keyspace to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) SetKeyspace(keyspace string) {
	o.Keyspace = keyspace
}

// WithTable adds the table to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) WithTable(table *string) *StorageServiceDescribeRingByKeyspaceGetParams {
	o.SetTable(table)
	return o
}

// SetTable adds the table to the storage service describe ring by keyspace get params
func (o *StorageServiceDescribeRingByKeyspaceGetParams) SetTable(table *string) {
	o.Table = table
}

// WriteToRequest writes these params to a swagger request
func (o *StorageServiceDescribeRingByKeyspaceGetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param keyspace
	if err := r.SetPathParam("keyspace", o.Keyspace); err != nil {
		return err
	}

	if o.Table != nil {

		// query param table
		var qrTable string
		if o.Table != nil {
			qrTable = *o.Table
		}
		qTable := qrTable
		if qTable != "" {
			if err := r.SetQueryParam("table", qTable); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
