// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// History history
//
// # Compaction history information
//
// swagger:model history
type History struct {

	// Bytes in
	BytesIn interface{} `json:"bytes_in,omitempty"`

	// Bytes out
	BytesOut interface{} `json:"bytes_out,omitempty"`

	// The column family name
	Cf string `json:"cf,omitempty"`

	// The time of compaction
	CompactedAt interface{} `json:"compacted_at,omitempty"`

	// The UUID
	ID string `json:"id,omitempty"`

	// The keyspace name
	Ks string `json:"ks,omitempty"`

	// The merged rows
	RowsMerged []*RowMerged `json:"rows_merged"`
}

// Validate validates this history
func (m *History) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRowsMerged(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *History) validateRowsMerged(formats strfmt.Registry) error {

	if swag.IsZero(m.RowsMerged) { // not required
		return nil
	}

	for i := 0; i < len(m.RowsMerged); i++ {
		if swag.IsZero(m.RowsMerged[i]) { // not required
			continue
		}

		if m.RowsMerged[i] != nil {
			if err := m.RowsMerged[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rows_merged" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *History) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *History) UnmarshalBinary(b []byte) error {
	var res History
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
