// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Verb Verb
//
// swagger:model Verb
type Verb string

const (

	// VerbCLIENTID captures enum value "CLIENT_ID"
	VerbCLIENTID Verb = "CLIENT_ID"

	// VerbMUTATION captures enum value "MUTATION"
	VerbMUTATION Verb = "MUTATION"

	// VerbMUTATIONDONE captures enum value "MUTATION_DONE"
	VerbMUTATIONDONE Verb = "MUTATION_DONE"

	// VerbREADDATA captures enum value "READ_DATA"
	VerbREADDATA Verb = "READ_DATA"

	// VerbREADMUTATIONDATA captures enum value "READ_MUTATION_DATA"
	VerbREADMUTATIONDATA Verb = "READ_MUTATION_DATA"

	// VerbREADDIGEST captures enum value "READ_DIGEST"
	VerbREADDIGEST Verb = "READ_DIGEST"

	// VerbGOSSIPECHO captures enum value "GOSSIP_ECHO"
	VerbGOSSIPECHO Verb = "GOSSIP_ECHO"

	// VerbGOSSIPDIGESTSYN captures enum value "GOSSIP_DIGEST_SYN"
	VerbGOSSIPDIGESTSYN Verb = "GOSSIP_DIGEST_SYN"

	// VerbGOSSIPDIGESTACK2 captures enum value "GOSSIP_DIGEST_ACK2"
	VerbGOSSIPDIGESTACK2 Verb = "GOSSIP_DIGEST_ACK2"

	// VerbGOSSIPSHUTDOWN captures enum value "GOSSIP_SHUTDOWN"
	VerbGOSSIPSHUTDOWN Verb = "GOSSIP_SHUTDOWN"

	// VerbDEFINITIONSUPDATE captures enum value "DEFINITIONS_UPDATE"
	VerbDEFINITIONSUPDATE Verb = "DEFINITIONS_UPDATE"

	// VerbTRUNCATE captures enum value "TRUNCATE"
	VerbTRUNCATE Verb = "TRUNCATE"

	// VerbREPLICATIONFINISHED captures enum value "REPLICATION_FINISHED"
	VerbREPLICATIONFINISHED Verb = "REPLICATION_FINISHED"

	// VerbMIGRATIONREQUEST captures enum value "MIGRATION_REQUEST"
	VerbMIGRATIONREQUEST Verb = "MIGRATION_REQUEST"

	// VerbPREPAREMESSAGE captures enum value "PREPARE_MESSAGE"
	VerbPREPAREMESSAGE Verb = "PREPARE_MESSAGE"

	// VerbPREPAREDONEMESSAGE captures enum value "PREPARE_DONE_MESSAGE"
	VerbPREPAREDONEMESSAGE Verb = "PREPARE_DONE_MESSAGE"

	// VerbSTREAMMUTATION captures enum value "STREAM_MUTATION"
	VerbSTREAMMUTATION Verb = "STREAM_MUTATION"

	// VerbSTREAMMUTATIONDONE captures enum value "STREAM_MUTATION_DONE"
	VerbSTREAMMUTATIONDONE Verb = "STREAM_MUTATION_DONE"

	// VerbCOMPLETEMESSAGE captures enum value "COMPLETE_MESSAGE"
	VerbCOMPLETEMESSAGE Verb = "COMPLETE_MESSAGE"

	// VerbREPAIRCHECKSUMRANGE captures enum value "REPAIR_CHECKSUM_RANGE"
	VerbREPAIRCHECKSUMRANGE Verb = "REPAIR_CHECKSUM_RANGE"

	// VerbGETSCHEMAVERSION captures enum value "GET_SCHEMA_VERSION"
	VerbGETSCHEMAVERSION Verb = "GET_SCHEMA_VERSION"
)

// for schema
var verbEnum []interface{}

func init() {
	var res []Verb
	if err := json.Unmarshal([]byte(`["CLIENT_ID","MUTATION","MUTATION_DONE","READ_DATA","READ_MUTATION_DATA","READ_DIGEST","GOSSIP_ECHO","GOSSIP_DIGEST_SYN","GOSSIP_DIGEST_ACK2","GOSSIP_SHUTDOWN","DEFINITIONS_UPDATE","TRUNCATE","REPLICATION_FINISHED","MIGRATION_REQUEST","PREPARE_MESSAGE","PREPARE_DONE_MESSAGE","STREAM_MUTATION","STREAM_MUTATION_DONE","COMPLETE_MESSAGE","REPAIR_CHECKSUM_RANGE","GET_SCHEMA_VERSION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		verbEnum = append(verbEnum, v)
	}
}

func (m Verb) validateVerbEnum(path, location string, value Verb) error {
	if err := validate.EnumCase(path, location, value, verbEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this verb
func (m Verb) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVerbEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
