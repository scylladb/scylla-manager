// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewStorageServiceSstablesByKeyspacePostParams creates a new StorageServiceSstablesByKeyspacePostParams object
// with the default values initialized.
func NewStorageServiceSstablesByKeyspacePostParams() *StorageServiceSstablesByKeyspacePostParams {
	var ()
	return &StorageServiceSstablesByKeyspacePostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStorageServiceSstablesByKeyspacePostParamsWithTimeout creates a new StorageServiceSstablesByKeyspacePostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStorageServiceSstablesByKeyspacePostParamsWithTimeout(timeout time.Duration) *StorageServiceSstablesByKeyspacePostParams {
	var ()
	return &StorageServiceSstablesByKeyspacePostParams{

		timeout: timeout,
	}
}

// NewStorageServiceSstablesByKeyspacePostParamsWithContext creates a new StorageServiceSstablesByKeyspacePostParams object
// with the default values initialized, and the ability to set a context for a request
func NewStorageServiceSstablesByKeyspacePostParamsWithContext(ctx context.Context) *StorageServiceSstablesByKeyspacePostParams {
	var ()
	return &StorageServiceSstablesByKeyspacePostParams{

		Context: ctx,
	}
}

// NewStorageServiceSstablesByKeyspacePostParamsWithHTTPClient creates a new StorageServiceSstablesByKeyspacePostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStorageServiceSstablesByKeyspacePostParamsWithHTTPClient(client *http.Client) *StorageServiceSstablesByKeyspacePostParams {
	var ()
	return &StorageServiceSstablesByKeyspacePostParams{
		HTTPClient: client,
	}
}

/*
StorageServiceSstablesByKeyspacePostParams contains all the parameters to send to the API endpoint
for the storage service sstables by keyspace post operation typically these are written to a http.Request
*/
type StorageServiceSstablesByKeyspacePostParams struct {

	/*Cf
	  Column family name

	*/
	Cf string
	/*Keyspace
	  The keyspace

	*/
	Keyspace string
	/*LoadAndStream
	  Load the sstables and stream to all replica nodes that owns the data

	*/
	LoadAndStream *bool
	/*PrimaryReplicaOnly
	  Load the sstables and stream to primary replica node that owns the data. Repair is needed after the load and stream process

	*/
	PrimaryReplicaOnly *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) WithTimeout(timeout time.Duration) *StorageServiceSstablesByKeyspacePostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) WithContext(ctx context.Context) *StorageServiceSstablesByKeyspacePostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) WithHTTPClient(client *http.Client) *StorageServiceSstablesByKeyspacePostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCf adds the cf to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) WithCf(cf string) *StorageServiceSstablesByKeyspacePostParams {
	o.SetCf(cf)
	return o
}

// SetCf adds the cf to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) SetCf(cf string) {
	o.Cf = cf
}

// WithKeyspace adds the keyspace to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) WithKeyspace(keyspace string) *StorageServiceSstablesByKeyspacePostParams {
	o.SetKeyspace(keyspace)
	return o
}

// SetKeyspace adds the keyspace to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) SetKeyspace(keyspace string) {
	o.Keyspace = keyspace
}

// WithLoadAndStream adds the loadAndStream to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) WithLoadAndStream(loadAndStream *bool) *StorageServiceSstablesByKeyspacePostParams {
	o.SetLoadAndStream(loadAndStream)
	return o
}

// SetLoadAndStream adds the loadAndStream to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) SetLoadAndStream(loadAndStream *bool) {
	o.LoadAndStream = loadAndStream
}

// WithPrimaryReplicaOnly adds the primaryReplicaOnly to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) WithPrimaryReplicaOnly(primaryReplicaOnly *bool) *StorageServiceSstablesByKeyspacePostParams {
	o.SetPrimaryReplicaOnly(primaryReplicaOnly)
	return o
}

// SetPrimaryReplicaOnly adds the primaryReplicaOnly to the storage service sstables by keyspace post params
func (o *StorageServiceSstablesByKeyspacePostParams) SetPrimaryReplicaOnly(primaryReplicaOnly *bool) {
	o.PrimaryReplicaOnly = primaryReplicaOnly
}

// WriteToRequest writes these params to a swagger request
func (o *StorageServiceSstablesByKeyspacePostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param cf
	qrCf := o.Cf
	qCf := qrCf
	if qCf != "" {
		if err := r.SetQueryParam("cf", qCf); err != nil {
			return err
		}
	}

	// path param keyspace
	if err := r.SetPathParam("keyspace", o.Keyspace); err != nil {
		return err
	}

	if o.LoadAndStream != nil {

		// query param load_and_stream
		var qrLoadAndStream bool
		if o.LoadAndStream != nil {
			qrLoadAndStream = *o.LoadAndStream
		}
		qLoadAndStream := swag.FormatBool(qrLoadAndStream)
		if qLoadAndStream != "" {
			if err := r.SetQueryParam("load_and_stream", qLoadAndStream); err != nil {
				return err
			}
		}

	}

	if o.PrimaryReplicaOnly != nil {

		// query param primary_replica_only
		var qrPrimaryReplicaOnly bool
		if o.PrimaryReplicaOnly != nil {
			qrPrimaryReplicaOnly = *o.PrimaryReplicaOnly
		}
		qPrimaryReplicaOnly := swag.FormatBool(qrPrimaryReplicaOnly)
		if qPrimaryReplicaOnly != "" {
			if err := r.SetQueryParam("primary_replica_only", qPrimaryReplicaOnly); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
