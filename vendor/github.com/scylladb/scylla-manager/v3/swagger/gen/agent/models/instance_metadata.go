// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InstanceMetadata instance metadata
//
// # Information about instance on which agent is running
//
// swagger:model InstanceMetadata
type InstanceMetadata struct {

	// Cloud provider
	// Enum: [aws gcp azure ]
	CloudProvider string `json:"cloud_provider,omitempty"`

	// Cloud machine type, e.g. Standard-A3
	InstanceType string `json:"instance_type,omitempty"`
}

// Validate validates this instance metadata
func (m *InstanceMetadata) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCloudProvider(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var instanceMetadataTypeCloudProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["aws","gcp","azure",""]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		instanceMetadataTypeCloudProviderPropEnum = append(instanceMetadataTypeCloudProviderPropEnum, v)
	}
}

const (

	// InstanceMetadataCloudProviderAws captures enum value "aws"
	InstanceMetadataCloudProviderAws string = "aws"

	// InstanceMetadataCloudProviderGcp captures enum value "gcp"
	InstanceMetadataCloudProviderGcp string = "gcp"

	// InstanceMetadataCloudProviderAzure captures enum value "azure"
	InstanceMetadataCloudProviderAzure string = "azure"

	// InstanceMetadataCloudProviderEmpty captures enum value ""
	InstanceMetadataCloudProviderEmpty string = ""
)

// prop value enum
func (m *InstanceMetadata) validateCloudProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, instanceMetadataTypeCloudProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *InstanceMetadata) validateCloudProvider(formats strfmt.Registry) error {

	if swag.IsZero(m.CloudProvider) { // not required
		return nil
	}

	// value enum
	if err := m.validateCloudProviderEnum("cloud_provider", "body", m.CloudProvider); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InstanceMetadata) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InstanceMetadata) UnmarshalBinary(b []byte) error {
	var res InstanceMetadata
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
