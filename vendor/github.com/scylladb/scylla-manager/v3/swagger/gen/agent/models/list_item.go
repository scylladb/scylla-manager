// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListItem list item
//
// swagger:model ListItem
type ListItem struct {

	// Encrypted name
	Encrypted string `json:"Encrypted,omitempty"`

	// Hash of the item
	Hashes interface{} `json:"Hashes,omitempty"`

	// ID of the item
	ID string `json:"ID,omitempty"`

	// true if item is directory
	IsDir bool `json:"IsDir,omitempty"`

	// mime type of the item
	MimeType string `json:"MimeType,omitempty"`

	// Modification time
	// Format: date-time
	ModTime strfmt.DateTime `json:"ModTime,omitempty"`

	// Name of the item
	Name string `json:"Name,omitempty"`

	// Original ID of the item
	OrigID string `json:"OrigID,omitempty"`

	// Path of the item
	Path string `json:"Path,omitempty"`

	// Size in bytes
	Size int64 `json:"Size,omitempty"`
}

// Validate validates this list item
func (m *ListItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateModTime(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ListItem) validateModTime(formats strfmt.Registry) error {

	if swag.IsZero(m.ModTime) { // not required
		return nil
	}

	if err := validate.FormatOf("ModTime", "body", "date-time", m.ModTime.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ListItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ListItem) UnmarshalBinary(b []byte) error {
	var res ListItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
