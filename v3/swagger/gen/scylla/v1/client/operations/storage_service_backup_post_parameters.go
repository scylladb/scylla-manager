// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewStorageServiceBackupPostParams creates a new StorageServiceBackupPostParams object
// with the default values initialized.
func NewStorageServiceBackupPostParams() *StorageServiceBackupPostParams {
	var ()
	return &StorageServiceBackupPostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewStorageServiceBackupPostParamsWithTimeout creates a new StorageServiceBackupPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewStorageServiceBackupPostParamsWithTimeout(timeout time.Duration) *StorageServiceBackupPostParams {
	var ()
	return &StorageServiceBackupPostParams{

		timeout: timeout,
	}
}

// NewStorageServiceBackupPostParamsWithContext creates a new StorageServiceBackupPostParams object
// with the default values initialized, and the ability to set a context for a request
func NewStorageServiceBackupPostParamsWithContext(ctx context.Context) *StorageServiceBackupPostParams {
	var ()
	return &StorageServiceBackupPostParams{

		Context: ctx,
	}
}

// NewStorageServiceBackupPostParamsWithHTTPClient creates a new StorageServiceBackupPostParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewStorageServiceBackupPostParamsWithHTTPClient(client *http.Client) *StorageServiceBackupPostParams {
	var ()
	return &StorageServiceBackupPostParams{
		HTTPClient: client,
	}
}

/*
StorageServiceBackupPostParams contains all the parameters to send to the API endpoint
for the storage service backup post operation typically these are written to a http.Request
*/
type StorageServiceBackupPostParams struct {

	/*Bucket
	  Name of the bucket to backup sstables to

	*/
	Bucket string
	/*Endpoint
	  ID of the configured object storage endpoint to copy sstables to

	*/
	Endpoint string
	/*Keyspace
	  Name of a keyspace to copy sstables from

	*/
	Keyspace string
	/*Prefix
	  The prefix of the objects for the backuped sstables

	*/
	Prefix string
	/*Snapshot
	  Name of a snapshot to copy sstables from

	*/
	Snapshot *string
	/*Table
	  Name of a table to copy sstables from

	*/
	Table string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithTimeout(timeout time.Duration) *StorageServiceBackupPostParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithContext(ctx context.Context) *StorageServiceBackupPostParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithHTTPClient(client *http.Client) *StorageServiceBackupPostParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBucket adds the bucket to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithBucket(bucket string) *StorageServiceBackupPostParams {
	o.SetBucket(bucket)
	return o
}

// SetBucket adds the bucket to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetBucket(bucket string) {
	o.Bucket = bucket
}

// WithEndpoint adds the endpoint to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithEndpoint(endpoint string) *StorageServiceBackupPostParams {
	o.SetEndpoint(endpoint)
	return o
}

// SetEndpoint adds the endpoint to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetEndpoint(endpoint string) {
	o.Endpoint = endpoint
}

// WithKeyspace adds the keyspace to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithKeyspace(keyspace string) *StorageServiceBackupPostParams {
	o.SetKeyspace(keyspace)
	return o
}

// SetKeyspace adds the keyspace to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetKeyspace(keyspace string) {
	o.Keyspace = keyspace
}

// WithPrefix adds the prefix to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithPrefix(prefix string) *StorageServiceBackupPostParams {
	o.SetPrefix(prefix)
	return o
}

// SetPrefix adds the prefix to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetPrefix(prefix string) {
	o.Prefix = prefix
}

// WithSnapshot adds the snapshot to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithSnapshot(snapshot *string) *StorageServiceBackupPostParams {
	o.SetSnapshot(snapshot)
	return o
}

// SetSnapshot adds the snapshot to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetSnapshot(snapshot *string) {
	o.Snapshot = snapshot
}

// WithTable adds the table to the storage service backup post params
func (o *StorageServiceBackupPostParams) WithTable(table string) *StorageServiceBackupPostParams {
	o.SetTable(table)
	return o
}

// SetTable adds the table to the storage service backup post params
func (o *StorageServiceBackupPostParams) SetTable(table string) {
	o.Table = table
}

// WriteToRequest writes these params to a swagger request
func (o *StorageServiceBackupPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param bucket
	qrBucket := o.Bucket
	qBucket := qrBucket
	if qBucket != "" {
		if err := r.SetQueryParam("bucket", qBucket); err != nil {
			return err
		}
	}

	// query param endpoint
	qrEndpoint := o.Endpoint
	qEndpoint := qrEndpoint
	if qEndpoint != "" {
		if err := r.SetQueryParam("endpoint", qEndpoint); err != nil {
			return err
		}
	}

	// query param keyspace
	qrKeyspace := o.Keyspace
	qKeyspace := qrKeyspace
	if qKeyspace != "" {
		if err := r.SetQueryParam("keyspace", qKeyspace); err != nil {
			return err
		}
	}

	// query param prefix
	qrPrefix := o.Prefix
	qPrefix := qrPrefix
	if qPrefix != "" {
		if err := r.SetQueryParam("prefix", qPrefix); err != nil {
			return err
		}
	}

	if o.Snapshot != nil {

		// query param snapshot
		var qrSnapshot string
		if o.Snapshot != nil {
			qrSnapshot = *o.Snapshot
		}
		qSnapshot := qrSnapshot
		if qSnapshot != "" {
			if err := r.SetQueryParam("snapshot", qSnapshot); err != nil {
				return err
			}
		}

	}

	// query param table
	qrTable := o.Table
	qTable := qrTable
	if qTable != "" {
		if err := r.SetQueryParam("table", qTable); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
