// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Level level
//
// swagger:model level
type Level string

const (

	// LevelError captures enum value "error"
	LevelError Level = "error"

	// LevelWarn captures enum value "warn"
	LevelWarn Level = "warn"

	// LevelInfo captures enum value "info"
	LevelInfo Level = "info"

	// LevelDebug captures enum value "debug"
	LevelDebug Level = "debug"

	// LevelTrace captures enum value "trace"
	LevelTrace Level = "trace"
)

// for schema
var levelEnum []interface{}

func init() {
	var res []Level
	if err := json.Unmarshal([]byte(`["error","warn","info","debug","trace"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		levelEnum = append(levelEnum, v)
	}
}

func (m Level) validateLevelEnum(path, location string, value Level) error {
	if err := validate.EnumCase(path, location, value, levelEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this level
func (m Level) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLevelEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
