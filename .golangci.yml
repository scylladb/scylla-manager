run:
  deadline: 5m
  tests: false
  skip-files:
    - _gen\.go$
    - _string\.go$
    - mock_.*\.go$
    - pkg/managerclient/sizesuffix.go
  silent: true

linters-settings:
  errcheck:
    check-blank: true
  gocognit:
    min-complexity: 50
  gocyclo:
    min-complexity: 50
  gocritic:
    enabled-tags:
      - diagnostic
      - performance
      - style
    disabled-checks:
      - commentedOutCode
      - evalOrder
      - hugeParam
      - importShadow
      - regexpSimplify
      - yodaStyleExpr
      - whyNoLint
  lll:
    line-length: 180
  nestif:
    min-complexity: 6

linters:
  enable-all: true
  disable:
    - contextcheck
    - cyclop
    - durationcheck
    - exhaustive
    - exhaustivestruct
    - exhaustruct
    - forbidigo
    - forcetypeassert
    - funlen
    - gas
    - gochecknoglobals
    - gochecknoinits
    - gocritic
    - goerr113
    - golint
    - gomnd
    - ifshort
    - interfacer
    - ireturn
    - maligned
    - nilerr
    - nlreturn
    - nolintlint
    - nonamedreturns
    - prealloc
    - promlinter
    - scopelint
    - tagliatelle
    - varnamelen
    - wrapcheck
    - wsl

issues:
  exclude-use-default: false
  exclude:
    - a blank import should be only in a main or test package, or have a comment justifying it
    - at least one file in a package should have a package comment
    - cognitive complexity [\d]+ of func `\(\*Service\)\.Backup` is high
    - cognitive complexity [\d]+ of func `\(\*Service\)\.Repair` is high
    - composite literal uses unkeyed fields
    - exported function Default.+ should have comment or be unexported
    - exported function New.* should have comment or be unexported
    - exported function Make
    - exported method +\.Close should have comment or be unexported
    - exported method .*Value\..+ should have comment or be unexported
    - exported method .+\.Init should have comment or be unexported
    - exported method .+\.IsZero should have comment or be unexported
    - exported method .+\.Key should have comment or be unexported
    - exported method .+\.MarshalBinary should have comment or be unexported
    - exported method .+\.MarshalCQL should have comment or be unexported
    - exported method .+\.MarshalJson should have comment or be unexported
    - exported method .+\.MarshalText should have comment or be unexported
    - exported method .+\.MarshalUDT should have comment or be unexported
    - exported method .+\.UnmarshalBinary should have comment or be unexported
    - exported method .+\.UnmarshalCQL should have comment or be unexported
    - exported method .+\.UnmarshalJson should have comment or be unexported
    - exported method .+\.UnmarshalText should have comment or be unexported
    - exported method .+\.UnmarshalUDT should have comment or be unexported
    - exported method .+\.Validate should have comment or be unexported
    - exported method .+\.Value should have comment or be unexported
    - exported method .+\.WriteTo should have comment or be unexported
    - exported method Service.Runner should have comment or be unexported
    - exported method Wrapper\..+ should have comment or be unexported
    - exported method Runner\.Run should have comment or be unexported
    - exported type .*Metrics should have comment or be unexported
    - exported type .*Value should have comment or be unexported
    - exported type Option should have comment or be unexported
    - exported type Service should have comment or be unexported
    - exported var Default.+ should have comment or be unexported
    - has json tag but is not exported
    - naked return in func `WriteTo`
    - replacement are not allowed
    - return value of `.+\.Close` is not checked
    - return value of `net.SplitHostPort` is not checked
    - return value of `strconv.ParseBool` is not checked
    - should merge variable declaration with assignment on next line
    - should not use dot imports
    - string `string` has [\d]+ occurrences, make it a constant
    - Function name[:] .+, Cyclomatic Complexity
  exclude-rules:
    - path: pkg/scheduler/activation\.go
      text: receiver-naming[:] receiver name .+ should be consistent with previous receiver name .+ for invalid-type
