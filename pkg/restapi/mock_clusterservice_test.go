// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/scylladb/scylla-manager/pkg/restapi (interfaces: ClusterService)

// Package restapi is a generated GoMock package.
package restapi

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	cluster "github.com/scylladb/scylla-manager/v3/pkg/service/cluster"
	uuid "github.com/scylladb/scylla-manager/v3/pkg/util/uuid"
	reflect "reflect"
)

// MockClusterService is a mock of ClusterService interface
type MockClusterService struct {
	ctrl     *gomock.Controller
	recorder *MockClusterServiceMockRecorder
}

// MockClusterServiceMockRecorder is the mock recorder for MockClusterService
type MockClusterServiceMockRecorder struct {
	mock *MockClusterService
}

// NewMockClusterService creates a new mock instance
func NewMockClusterService(ctrl *gomock.Controller) *MockClusterService {
	mock := &MockClusterService{ctrl: ctrl}
	mock.recorder = &MockClusterServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClusterService) EXPECT() *MockClusterServiceMockRecorder {
	return m.recorder
}

// DeleteCQLCredentials mocks base method
func (m *MockClusterService) DeleteCQLCredentials(arg0 context.Context, arg1 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCQLCredentials", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCQLCredentials indicates an expected call of DeleteCQLCredentials
func (mr *MockClusterServiceMockRecorder) DeleteCQLCredentials(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCQLCredentials", reflect.TypeOf((*MockClusterService)(nil).DeleteCQLCredentials), arg0, arg1)
}

// DeleteCluster mocks base method
func (m *MockClusterService) DeleteCluster(arg0 context.Context, arg1 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteCluster", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteCluster indicates an expected call of DeleteCluster
func (mr *MockClusterServiceMockRecorder) DeleteCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteCluster", reflect.TypeOf((*MockClusterService)(nil).DeleteCluster), arg0, arg1)
}

// DeleteSSLUserCert mocks base method
func (m *MockClusterService) DeleteSSLUserCert(arg0 context.Context, arg1 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSSLUserCert", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSSLUserCert indicates an expected call of DeleteSSLUserCert
func (mr *MockClusterServiceMockRecorder) DeleteSSLUserCert(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSSLUserCert", reflect.TypeOf((*MockClusterService)(nil).DeleteSSLUserCert), arg0, arg1)
}

// GetCluster mocks base method
func (m *MockClusterService) GetCluster(arg0 context.Context, arg1 string) (*cluster.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCluster", arg0, arg1)
	ret0, _ := ret[0].(*cluster.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCluster indicates an expected call of GetCluster
func (mr *MockClusterServiceMockRecorder) GetCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCluster", reflect.TypeOf((*MockClusterService)(nil).GetCluster), arg0, arg1)
}

// ListClusters mocks base method
func (m *MockClusterService) ListClusters(arg0 context.Context, arg1 *cluster.Filter) ([]*cluster.Cluster, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListClusters", arg0, arg1)
	ret0, _ := ret[0].([]*cluster.Cluster)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListClusters indicates an expected call of ListClusters
func (mr *MockClusterServiceMockRecorder) ListClusters(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListClusters", reflect.TypeOf((*MockClusterService)(nil).ListClusters), arg0, arg1)
}

// ListNodes mocks base method
func (m *MockClusterService) ListNodes(arg0 context.Context, arg1 uuid.UUID) ([]cluster.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNodes", arg0, arg1)
	ret0, _ := ret[0].([]cluster.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNodes indicates an expected call of ListNodes
func (mr *MockClusterServiceMockRecorder) ListNodes(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNodes", reflect.TypeOf((*MockClusterService)(nil).ListNodes), arg0, arg1)
}

// PutCluster mocks base method
func (m *MockClusterService) PutCluster(arg0 context.Context, arg1 *cluster.Cluster) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutCluster", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// PutCluster indicates an expected call of PutCluster
func (mr *MockClusterServiceMockRecorder) PutCluster(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutCluster", reflect.TypeOf((*MockClusterService)(nil).PutCluster), arg0, arg1)
}
