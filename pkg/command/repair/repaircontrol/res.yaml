use: control --cluster <id|name>

short: Change parameters while a repair is running

long: |
  This command allows you to modify repair parameters while a repair is running.
  Note that modified parameters apply only to the currently running task and not to the future task runs.
  Moreover, this change is applied only to newly created ScyllaDB repair jobs (and to the currently repaired table).
  This means that all currently running jobs will continue to run with previous parallel/intensity settings,
  but it shouldn't take much time for them to finish and observe the new behavior.
  For modifying future repair task runs see 'sctool repair update' command.

intensity: |
  How many token ranges to repair in a single Scylla node at the same time.
  Zero (0) is a special value, the number of token ranges is adjusted to the maximum supported (see repair docs for more information).
  Changing the intensity impacts repair granularity if you need to resume it, the higher the value the more work on resume.
  If you set intensity to a value greater than the maximum supported by the node, intensity will be capped at that maximum.
  See effectively used intensity value in the display of 'sctool progress repair' command.

parallel: |
  The maximum number of Scylla repair jobs that can run at the same time (on different token ranges and replicas).
  Each node can take part in at most one repair at any given moment. By default the maximum possible parallelism is used.
  The maximal effective parallelism depends on keyspace replication strategy and cluster topology (see repair docs for more information).
  If you set parallel to a value greater than the maximum supported by the node, parallel will be capped at that maximum.
  See effectively used parallel value in the display of 'sctool progress repair' command.
