glob: |
  The following syntax for glob patterns is supported:

  * '*' - matches any number of any characters including none
  * '?' - matches any single character
  * '[abc]' - matches one character given in the bracket
  * '[a-z]' - matches one character from the range given in the bracket

  Patterns are evaluated from left to right.
  If a pattern starts with '!' it unselects items that were selected by previous patterns i.e. 'a?,!aa' selects *ab* but not *aa*.

cluster: |
  The target cluster `name or ID` (envvar SCYLLA_MANAGER_CLUSTER).

dc: |
  A list of datacenter `glob` patterns separated by a comma, e.g. ``dc1,!otherdc*`` used to specify the datacenters to include or exclude.
  ${glob}

fail-fast: |
  Stops the task run on the first error.

keyspace: |
  A list of `glob` patterns separated by a comma used to include or exclude tables.
  The patterns match keyspaces and tables, separate the keyspace name from the table name with a dot e.g. ``keyspace,!keyspace.table_prefix_*``.
  ${glob}

location: |
  A list of backup locations separated by a comma, specifies where to place the backup, the format is `[<dc>:]<provider>:<bucket>`.
  The ``<dc>`` parameter is optional it allows to specify location for a datacenter in a multi-dc setting, it must match Scylla nodes datacenter.
  The supported storage ``<provider>``s are ``azure``, ``gcs``, ``s3``.
  The ``name`` parameter is a bucket name, it must be an alphanumeric string and **may contain a dash and or a dot, but other characters are forbidden**.

api-url: |
  Base `URL` of Scylla Manager server (envvar SCYLLA_MANAGER_API_URL).
  If running sctool on the same machine as server, it's generated based on ``/etc/scylla-manager/scylla-manager.yaml`` file.

api-cert-file: |
  File `path` to HTTPS client certificate used to access the Scylla Manager server when client certificate validation is enabled (envvar SCYLLA_MANAGER_API_CERT_FILE).

api-key-file: |
  File `path` to HTTPS client key associated with --api-cert-file flag (envvar SCYLLA_MANAGER_API_KEY_FILE).
